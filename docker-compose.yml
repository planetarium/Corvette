version: '3.8'
services:
  observer:
    depends_on:
      message-queue-broker:
        condition: service_healthy
    image: "planetarium/corvette-observer:${VERSION:?}"
    build:
      context: .
      target: observer
    container_name: observer
    environment:
      DATABASE_URL: prisma://dataproxy:8002?api_key=x5aol207TyRdhHuanAXlpTgVWDcK8jm2rVKJOQGbwaMqfvZbmGJnIbwBjUxYaBrFx1XOfyF4
  emitter:
    depends_on:
      message-queue-broker:
        condition: service_healthy
    image: "planetarium/corvette-emitter:${VERSION:?}"
    build:
      context: .
      target: emitter
    container_name: emitter
    environment:
      DATABASE_URL: prisma://dataproxy:8002?api_key=x5aol207TyRdhHuanAXlpTgVWDcK8jm2rVKJOQGbwaMqfvZbmGJnIbwBjUxYaBrFx1XOfyF4
  api:
    depends_on:
      message-queue-broker:
        condition: service_healthy
    image: "planetarium/corvette-api:${VERSION:?}"
    build:
      context: .
      target: api
    container_name: api
    environment:
      DATABASE_URL: prisma://dataproxy:8002?api_key=x5aol207TyRdhHuanAXlpTgVWDcK8jm2rVKJOQGbwaMqfvZbmGJnIbwBjUxYaBrFx1XOfyF4
  web:
    depends_on:
      message-queue-broker:
        condition: service_healthy
      api:
        condition: service_started
    image: "planetarium/corvette-web:${VERSION:?}"
    environment:
      DENO_DEPLOYMENT_ID: "${VERSION:?}"
    build:
      context: .
      target: web
    container_name: web
  create-db:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      target: common
    environment:
      DIRECT_URL: postgres://postgres:V0uYcxk2dFixtPWfK4Nb@db/postgres
    command: deno task prisma db push
  dataproxy:
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      target: dataproxy
    environment:
      DATABASE_URL: prisma://dataproxy:8002?api_key=x5aol207TyRdhHuanAXlpTgVWDcK8jm2rVKJOQGbwaMqfvZbmGJnIbwBjUxYaBrFx1XOfyF4
      DIRECT_URL: postgres://postgres:V0uYcxk2dFixtPWfK4Nb@db/postgres
  message-queue-broker:
    image: rabbitmq:3.12.2-alpine
    restart: always
    container_name: message-queue-broker
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD"
        - "rabbitmqctl"
        - "status"
  db:
    image: postgres:15.3-alpine3.18
    restart: always
    container_name: db
    environment:
      POSTGRES_PASSWORD: "V0uYcxk2dFixtPWfK4Nb"
    volumes:
      - ./data/db:/var/lib/postgresql/data/
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test:
        - "CMD-SHELL"
        - "pg_isready --dbname=inspirehep --host=localhost --username=inspirehep"



